apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: postgres-template
parameters:
  - name: STAGE
    required: true
    value: test
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"postgresql-15:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"postgres\")].image"}]'
      labels:
        app: postgres
      name: postgres
      namespace: bb18ab-${STAGE}
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: postgres
          deployment: postgres
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            vault.hashicorp.com/agent-inject: "true"
            vault.hashicorp.com/agent-inject-secret-secrets.env: bb18ab-nonprod/${STAGE}/postgres
            vault.hashicorp.com/agent-inject-template-secrets.env: |
              {{- with secret "bb18ab-nonprod/${STAGE}/postgres" }}
              {{- range $k, $v := .Data.data }}
              {{ $k }}={{ $v }}{{ end -}}
              {{- end  }}
            vault.hashicorp.com/agent-limits-cpu: 50m
            vault.hashicorp.com/agent-limits-mem: 100Mi
            vault.hashicorp.com/agent-pre-populate-only: "true"
            vault.hashicorp.com/agent-requests-cpu: 10m
            vault.hashicorp.com/agent-requests-mem: 25Mi
            vault.hashicorp.com/auth-path: auth/k8s-silver
            vault.hashicorp.com/namespace: platform-services
            vault.hashicorp.com/role: bb18ab-nonprod
          labels:
            app: postgres
            deployment: postgres
        spec:
          containers:
            - args:
                - set -a; . /vault/secrets/secrets.env; set +a; exec run-postgresql
              command:
                - /bin/sh
                - -c
              image: quay.io/fedora/postgresql-15@sha256:60d6192fde182d7d225739438b9beee160b8b75cf3f1d04d7504a779afd4d0c4
              imagePullPolicy: IfNotPresent
              name: postgres
              ports:
                - containerPort: 5432
                  protocol: TCP
              resources:
                limits:
                  cpu: 100m
                  memory: 512Mi
                requests:
                  cpu: 20m
                  memory: 128Mi
              terminationMessagePath: /${STAGE}/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/lib/pgsql/data
                  name: postgres-volume
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: bb18ab-vault
          serviceAccountName: bb18ab-vault
          terminationGracePeriodSeconds: 30
          volumes:
            - name: postgres-volume
              persistentVolumeClaim:
                claimName: postgres-${STAGE}-hous-permit-portal
      readyReplicas: 1
      replicas: 1
      updatedReplicas: 1
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: postgres
      name: postgres
      namespace: bb18ab-${STAGE}
    spec:
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: 5432-tcp
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        app: postgres
        deployment: postgres
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      finalizers:
        - kubernetes.io/pvc-protection
      labels:
        app: postgres
      name: postgres-${STAGE}-hous-permit-portal
      namespace: bb18ab-${STAGE}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      storageClassName: netapp-file-standard
      volumeMode: Filesystem
